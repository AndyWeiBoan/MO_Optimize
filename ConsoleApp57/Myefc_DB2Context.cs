// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace ConsoleApp57
{
    public partial class Myefc_DB2Context : DbContext
    {
        public Myefc_DB2Context()
        {
        }

        public Myefc_DB2Context(DbContextOptions<Myefc_DB2Context> options)
            : base(options)
        {
        }

        public virtual DbSet<Customers> Customers { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer(@"Data Source=(localdb)\MSSQLLocalDB;Initial Catalog=MyEFC_DB2;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Customers>(entity =>
            {
                //entity.Property(e => e.Id).HasField("_id").UsePropertyAccessMode(PropertyAccessMode.Field);
                //entity.Property(e => e.Address)
                //    .HasColumnName("ADDRESS").HasField("_address").UsePropertyAccessMode(PropertyAccessMode.Field)
                //    .HasMaxLength(250);

                //entity.Property(e => e.CreditLevel).HasColumnName("CREDIT_LEVEL").HasField("_creditLevel");

                //entity.Property(e => e.Name)
                //    .HasColumnName("NAME").HasField("_name").UsePropertyAccessMode(PropertyAccessMode.Field)
                //    .HasMaxLength(120);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}